<Window x:Name="Box" x:Class="Eze.IO.Terminal.UI.Terminal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Eze.IO.Terminal.UI"
        mc:Ignorable="d" Height="400" Width="600" AllowsTransparency="True" WindowStyle="None" Topmost="false" Background="Transparent" WindowStartupLocation="CenterScreen" VerticalContentAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" HorizontalContentAlignment="Center" Unloaded="Box_Unloaded" Loaded="Box_Loaded" MouseUp="DragHandle_MouseUp" MouseDown="DragHandle_MouseDown" Focusable="False" SnapsToDevicePixels="True" StateChanged="Box_StateChanged" Icon="/terminal;component/terminal-icon.ico" MouseLeftButtonDown="Box_MouseLeftButtonDown" ContextMenu="{x:Null}">
    <WindowChrome.WindowChrome>
        <WindowChrome x:Name="BoxGrip" CaptionHeight="0" ResizeBorderThickness="3"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <Style x:Key="MaximizeEffect" TargetType="{x:Type Rectangle}">
            <Setter Property="Stroke" Value="#FFECF0F1"/>
            <Setter Property="StrokeThickness" Value="2"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="StrokeThickness" Value="2"/>
                    <Setter Property="Stroke" Value="#3498db"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MinimizeEffect" TargetType="{x:Type Line}">
            <Setter Property="Stroke" Value="#FFECF0F1"/>
            <Setter Property="StrokeThickness" Value="2"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="StrokeThickness" Value="2"/>
                    <Setter Property="Stroke" Value="#3498db"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Name="fgf" x:Key="CloseEffect" TargetType="{x:Type Canvas}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Line.StrokeThickness" Value="2"/>
                    <Setter Property="Line.Stroke" Value="#e74c3c"/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Line">
                    <Setter Property="Line.Stroke" Value="#FFECF0F1"/>
                    <Setter Property="Line.StrokeThickness" Value="2"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Line.StrokeThickness" Value="2"/>
                            <Setter Property="Line.Stroke" Value="#e74c3c"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>
        <Rectangle x:Key="MaximizeSign" Width="15" Height="15" Fill="Transparent" Margin="2" RadiusX="2" RadiusY="2" Style="{DynamicResource MaximizeEffect}"/>
        <Canvas x:Key="RestoreSign" x:Name="RestoreSign">
            <Rectangle Canvas.Top="-3.5" Canvas.Right="-4" x:Name="yRect" Width="13" Height="13" Fill="Transparent" Margin="2" RadiusX="2" RadiusY="2">
                <Rectangle.Style>
                    <Style TargetType="{x:Type Rectangle}">
                        <Setter Property="Stroke" Value="#FFECF0F1"/>
                        <Setter Property="StrokeThickness" Value="2"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=RestoreSign, Path=IsMouseOver}" Value="True">
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="Stroke" Value="#3498db"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
            <Rectangle Canvas.Bottom="-9" Canvas.Left="-8" x:Name="xRect" Width="15" Height="15" Fill="{Binding Background, ElementName=border}" Margin="2" RadiusX="2" RadiusY="2" Panel.ZIndex="1">
                <Rectangle.Style>
                    <Style TargetType="{x:Type Rectangle}">
                        <Setter Property="Stroke" Value="#FFECF0F1"/>
                        <Setter Property="StrokeThickness" Value="2"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=RestoreSign, Path=IsMouseOver}" Value="True">
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="Stroke" Value="#3498db"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
        </Canvas>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="5" Background="#FF9B59B6" BorderThickness="1" Padding="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HoverButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#FFE74C3C"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="InputCommand" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" TargetName="border" Value="transparent"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="transparent"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- All the following is required to Re-Style the ScrollViewer, see 
             http://msdn2.microsoft.com/en-us/library/aa970847(VS.85).aspx
             http://msdn2.microsoft.com/en-us/library/ms742173(VS.85).aspx
             for the default Stles that the ScrollViewer has out of the box
         -->

        <!-- Brushes used in Styling of ScrollViewer -->
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBrush" Color="#FF3498DB" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF3498DB" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF3498DB" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#FF3498DB" />
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
            StartPoint="0,0" EndPoint="1,0.001">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush"
            StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="GlyphBrush" Color="#FF2C3E50" />
        <LinearGradientBrush x:Key="PressedBrush"
            StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- ScrollViewer ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
          x:Name="Border"
          Margin="1"
          CornerRadius="2"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="1">
                            <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ScrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
          CornerRadius="2"
          BorderThickness="1" Background="#FF3498DB" BorderBrush="#FF3498DB" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <Border
      Grid.RowSpan="3"
      CornerRadius="2"
      Background="Transparent" />
                <RepeatButton
      Grid.Row="0"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track
      x:Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="1,0,1,0"
          Background="{StaticResource HorizontalNormalBrush}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
      Grid.Row="3"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <!-- HorizontalScrollBar Template using the previously created Templates -->
        <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border
      Grid.ColumnSpan="3"
      CornerRadius="2"
      Background="Transparent" />
                <RepeatButton
      Grid.Column="0"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track
      x:Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="0,1,0,1"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
      Grid.Column="3"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <!-- Style for overall  ScrollBar -->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid x:Name="Frame" RenderTransformOrigin="0,1" Margin="2" SnapsToDevicePixels="True" FocusManager.FocusedElement="{Binding ElementName=InputBlock}">
        <Border x:Name="border" Padding="4" BorderThickness="4" Background="#FF2C3E50" CornerRadius="10" Margin="1" Grid.ColumnSpan="2" SnapsToDevicePixels="True" FocusManager.FocusedElement="{Binding ElementName=InputBlock}" MinHeight="15" MinWidth="15">
            <Border.Effect>
                <DropShadowEffect Color="#FF25313E" Opacity="0.35" BlurRadius="3"/>
            </Border.Effect>
            <DockPanel x:Name="FrameItems">
                <Grid Name="TopBar" DockPanel.Dock="Top" Height="25" FocusVisualStyle="{x:Null}" Grid.IsSharedSizeScope="True" MinHeight="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" MouseUp="DragHandle_MouseUp" MouseDown="DragHandle_MouseDown" MinWidth="50">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="6*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="ConsoleTitle" Grid.Column="0" Foreground="#FFECF0F1" Grid.IsSharedSizeScope="True" Background="{Binding ElementName=border, Mode=OneWay}" FontWeight="SemiBold" FontFamily="Segoe UI Semibold" Canvas.Left="0" TextOptions.TextHintingMode="Animated" UseLayoutRounding="True" TextTrimming="CharacterEllipsis" Margin="5,0,10,0" Padding="2.5,5,0,0">[TITLE]</TextBlock>
                    <Canvas Grid.Column="1" Margin="100,0,0,0">
                        <Button x:Name="MinimizeButton" Margin="0,0,0,0" MinWidth="10" FontSize="16" Canvas.Right="65" Canvas.Top="3" Click="MinimizeButton_Click" Background="Transparent" BorderBrush="Transparent" Foreground="#FFECF0F1" Style="{DynamicResource HoverButtonStyle}" HorizontalContentAlignment="Center" HorizontalAlignment="Right" MinHeight="10" Width="20" Height="20" Canvas.Left="-75">
                            <Button.Content>
                                <Line x:Name="MinimizeSign" Y1="8" Y2="8" X1="-6" X2="6" Margin="2">
                                    <Line.Style>
                                        <Style TargetType="{x:Type Line}">
                                            <Setter Property="Stroke" Value="#FFECF0F1"/>
                                            <Setter Property="StrokeThickness" Value="2"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=MinimizeButton, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="StrokeThickness" Value="2"/>
                                                    <Setter Property="Stroke" Value="#3498db"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Line.Style>
                                </Line>
                            </Button.Content>
                        </Button>
                        <Button x:Name="MaximizeButton" Margin="0,0,0,0" Content="{DynamicResource MaximizeSign}" MinWidth="10" FontSize="16" Canvas.Right="35" Canvas.Top="3" Click="MaximizeButton_Click" Background="Transparent" BorderBrush="Transparent" Foreground="#FFECF0F1" Style="{DynamicResource HoverButtonStyle}"  MinHeight="10" Height="20" Width="20" Canvas.Left="-50"/>
                        <Button x:Name="CloseButton" Margin="0,0,0,0" MinWidth="10" FontSize="16" Canvas.Right="5" Canvas.Top="3" Click="CloseButton_Click" Background="Transparent" BorderBrush="Transparent" Foreground="#FFECF0F1" Style="{DynamicResource HoverButtonStyle}" MinHeight="10" RenderTransformOrigin="0.45,0.5" Canvas.Left="-25" Width="20" Height="20">
                            <Button.Content>
                                <Canvas x:Name="CloseSign" Margin="2">
                                    <Line x:Name="xLine" Y1="6" Y2="-6" X1="-6" X2="6">
                                        <Line.Style>
                                            <Style>
                                                <Setter Property="Line.Stroke" Value="#FFECF0F1"/>
                                                <Setter Property="Line.StrokeThickness" Value="2"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=CloseSign, Path=IsMouseOver}" Value="True">
                                                        <Setter Property="Line.StrokeThickness" Value="2"/>
                                                        <Setter Property="Line.Stroke" Value="#e74c3c"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Line.Style>
                                    </Line>
                                    <Line x:Name="yLine" Y1="-6" Y2="6" X1="-6" X2="6">
                                        <Line.Style>
                                            <Style>
                                                <Setter Property="Line.Stroke" Value="#FFECF0F1"/>
                                                <Setter Property="Line.StrokeThickness" Value="2"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=CloseSign, Path=IsMouseOver}" Value="True">
                                                        <Setter Property="Line.StrokeThickness" Value="2"/>
                                                        <Setter Property="Line.Stroke" Value="#e74c3c"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Line.Style>
                                    </Line>
                                </Canvas>
                            </Button.Content>
                        </Button>
                    </Canvas>
                </Grid>
                <ScrollViewer FocusManager.FocusedElement="{Binding ElementName=InputBlock}" Name="Scroller" FocusVisualStyle="{x:Null}" DockPanel.Dock="Top" Margin="0,10,0,0" Background="{Binding Background.Color, ElementName=border}" UseLayoutRounding="True" MouseDown="Scroller_MouseDown" Height="{Binding ElementName=stackPanel, Mode=OneWay}" Width="Auto" ClipToBounds="True">
                    <StackPanel Name="consoleItems" SnapsToDevicePixels="True" ClipToBounds="True" UseLayoutRounding="True" Margin="0,0,5,0" Clip="{Binding ElementName=Scroller, Mode=OneWay}">
                        <TextBox x:Name="outputSection" Margin="0,5,5,5" CaretBrush="{x:Null}" FontSize="14" IsReadOnly="True" IsReadOnlyCaretVisible="True" Foreground="#FFECF0F1" Grid.IsSharedSizeScope="True" Background="{Binding ElementName=border, Mode=OneWay}" FontWeight="SemiBold" FontFamily="Segoe UI Semibold" BorderBrush="{x:Null}" SelectionBrush="{x:Null}" Style="{DynamicResource ResourceKey=InputCommand}" IsUndoEnabled="False" SelectionOpacity="0"/>
                        <StackPanel x:Name="inputSection" Orientation="Horizontal" Margin="0,0,5,0" ClipToBounds="True">
                            <TextBox x:Name="inputSign" Margin="0,0,1,1" CaretBrush="{x:Null}" IsReadOnly="True" Foreground="#FFECF0F1" Grid.IsSharedSizeScope="True" Background="{Binding ElementName=border, Mode=OneWay}" FontFamily="Segoe UI Semibold" BorderBrush="{x:Null}" SelectionBrush="{x:Null}" Style="{DynamicResource ResourceKey=InputCommand}" IsUndoEnabled="False" SelectionOpacity="0" FontSize="14">></TextBox>
                            <Grid MaxWidth="{Binding ActualWidth, ElementName=Scroller, Mode=OneWay}">
                                <TextBox FontSize="14" Text="" Background="{Binding Background.Color, ElementName=border}" Foreground="#FFECF0F1" FontFamily="Segoe UI Semibold" Name="InputBlock" TextWrapping="Wrap" BorderBrush="{x:Null}" SelectionBrush="#FFECF0F1" Style="{DynamicResource ResourceKey=InputCommand}" MouseRightButtonDown="InputBlock_MouseRightButtonDown" MinWidth="20" CaretBrush="Transparent" Margin="-5,0,10,0" PreviewKeyDown="InputBlock_KeyDown">
                                    <TextBox.ContextMenu>
                                        <ContextMenu x:Name="InputMenu" Background="{Binding Background.Color, ElementName=border}">
                                            <MenuItem Header="CUT" Background="{Binding Background.Color, ElementName=border}" Foreground="#FFECF0F1" FontFamily="Segoe UI Semibold"/>
                                            <MenuItem Header="COPY"  Background="{Binding Background.Color, ElementName=border}" Foreground="#FFECF0F1" FontFamily="Segoe UI Semibold"/>
                                            <MenuItem Header="PASTE" Background="{Binding Background.Color, ElementName=border}" Foreground="#FFECF0F1" FontFamily="Segoe UI Semibold"/>
                                        </ContextMenu>
                                    </TextBox.ContextMenu>
                                </TextBox>
                                <Canvas x:Name="CaretContainer" RenderTransformOrigin="0.5,0.5" Margin="12,0,3,0">
                                    <Canvas.RenderTransform>
                                        <ScaleTransform ScaleY="-1"/>
                                    </Canvas.RenderTransform>
                                    <Border x:Name="InputCaret" Canvas.Right="0" Canvas.Top="0" Height="3" Width="10" Background="#FFECF0F1" Margin="0" IsEnabled="{Binding IsEnabled, ElementName=InputBlock}">
                                        <Border.Triggers>
                                            <EventTrigger RoutedEvent="Border.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard  x:Name="CaretStoryBoard" RepeatBehavior="Forever">
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Background.Color" Duration="0:0:0:1" FillBehavior="HoldEnd">
                                                            <ColorAnimationUsingKeyFrames.KeyFrames >
                                                                <DiscreteColorKeyFrame KeyTime="0:0:0.750" Value="Transparent" />
                                                                <DiscreteColorKeyFrame KeyTime="0:0:0.000" Value="#FFECF0F1"/>
                                                            </ColorAnimationUsingKeyFrames.KeyFrames>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Border.Triggers>
                                    </Border>
                                </Canvas>
                            </Grid>
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </DockPanel>
            <Border.BorderBrush>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#FFE74C3C" Offset="0.0"/>
                    <GradientStop Color="#FFE67E22" Offset="0.17"/>
                    <GradientStop Color="#FFF1C40F" Offset="0.33"/>
                    <GradientStop Color="#FF2ECC71" Offset="0.5"/>
                    <GradientStop Color="#FF3498DB" Offset="0.67"/>
                    <GradientStop Color="#FF8E44AD" Offset="0.83"/>
                    <GradientStop Color="#FF9B59B6" Offset="1.0"/>
                </LinearGradientBrush>
            </Border.BorderBrush>
        </Border>
        <!-- Animation -->
        <Grid.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                    From="0.0" To="1.0" Duration="0:0:1.5"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Window.Unloaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                    From="1.0" To="0.0" Duration="0:0:1.5"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Grid.Triggers>
    </Grid>
</Window>
